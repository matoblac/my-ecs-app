// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CdkStack snapshot 1`] = `
{
  "Outputs": {
    "BackendURL": {
      "Description": "Backend API URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ChatbotALB4F5C7305",
                "DNSName",
              ],
            },
            "/api",
          ],
        ],
      },
    },
    "FrontendURL": {
      "Description": "Frontend URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ChatbotALB4F5C7305",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "LoadBalancerDNS": {
      "Description": "DNS name of the load balancer",
      "Value": {
        "Fn::GetAtt": [
          "ChatbotALB4F5C7305",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "BackendLogGroupDA10F1B2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/ecs/chatbot-backend",
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "BackendTargetGroupECF98930": {
      "Properties": {
        "HealthCheckPath": "/health",
        "Matcher": {
          "HttpCode": "200",
        },
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ChatbotALB4F5C7305": {
      "DependsOn": [
        "TestVPCPublicSubnet1DefaultRoute11545FC4",
        "TestVPCPublicSubnet1RouteTableAssociationD7253C7B",
        "TestVPCPublicSubnet2DefaultRouteDCA67168",
        "TestVPCPublicSubnet2RouteTableAssociationBD2B01F3",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Name": "chatbot-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ChatbotALBSecurityGroupF9ADEBA5",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "TestVPCPublicSubnet1SubnetAE333572",
          },
          {
            "Ref": "TestVPCPublicSubnet2SubnetF2FC6943",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ChatbotALBListener4CAD5518": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "FrontendTargetGroupED7B3E5D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ChatbotALB4F5C7305",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ChatbotALBListenerAPIActionRule30CD53E1": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "BackendTargetGroupECF98930",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/api/*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "ChatbotALBListener4CAD5518",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "ChatbotALBSecurityGroupF9ADEBA5": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB SnapshotTestStackChatbotALB24BA76FA",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChatbotALBSecurityGrouptoSnapshotTestStackChatbotServiceSecurityGroupDE762CEC30006FD1FF47": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ChatbotServiceSecurityGroupC37F782E",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "ChatbotALBSecurityGroupF9ADEBA5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ChatbotClusterC48598AB": {
      "Properties": {
        "ClusterName": "chatbot-cluster",
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ChatbotService101BD27F": {
      "DependsOn": [
        "ChatbotALBListenerAPIActionRule30CD53E1",
        "ChatbotALBListener4CAD5518",
        "TaskRole30FC0FBB",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ChatbotClusterC48598AB",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "FrontendContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "FrontendTargetGroupED7B3E5D",
            },
          },
          {
            "ContainerName": "FrontendContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "BackendTargetGroupECF98930",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ChatbotServiceSecurityGroupC37F782E",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "TestVPCPublicSubnet1SubnetAE333572",
              },
              {
                "Ref": "TestVPCPublicSubnet2SubnetF2FC6943",
              },
            ],
          },
        },
        "ServiceName": "chatbot-service",
        "TaskDefinition": {
          "Ref": "ChatbotTaskDefinition0D7898FD",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ChatbotServiceSecurityGroupC37F782E": {
      "DependsOn": [
        "TaskRole30FC0FBB",
      ],
      "Properties": {
        "GroupDescription": "SnapshotTestStack/ChatbotService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChatbotServiceSecurityGroupfromSnapshotTestStackChatbotALBSecurityGroupC9577F79300033433D4C": {
      "DependsOn": [
        "TaskRole30FC0FBB",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "ChatbotServiceSecurityGroupC37F782E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ChatbotALBSecurityGroupF9ADEBA5",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ChatbotTaskDefinition0D7898FD": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "BACKEND_URL",
                "Value": "http://localhost:8080",
              },
              {
                "Name": "NODE_ENV",
                "Value": "production",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "123456789012.dkr.ecr.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/chatbot-frontend:latest",
                ],
              ],
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "FrontendLogGroupCE4F14E0",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "frontend",
              },
            },
            "Memory": 512,
            "Name": "FrontendContainer",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "NODE_ENV",
                "Value": "production",
              },
              {
                "Name": "PORT",
                "Value": "8080",
              },
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "123456789012.dkr.ecr.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/chatbot-backend:latest",
                ],
              ],
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "BackendLogGroupDA10F1B2",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "backend",
              },
            },
            "Memory": 1536,
            "Name": "BackendContainer",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "TaskExecutionRole250D2532",
            "Arn",
          ],
        },
        "Family": "SnapshotTestStackChatbotTaskDefinition0116CCD0",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TaskRole30FC0FBB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ChatbotWebACL": {
      "Properties": {
        "DefaultAction": {
          "Allow": {},
        },
        "Description": "WAF for Chatbot ALB",
        "Name": "chatbot-web-acl",
        "Rules": [
          {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "None": {},
            },
            "Priority": 1,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "CommonRuleSetMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": {
              "None": {},
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "KnownBadInputsRuleSetMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Action": {
              "Block": {},
            },
            "Name": "RateLimitRule",
            "Priority": 3,
            "Statement": {
              "RateBasedStatement": {
                "AggregateKeyType": "IP",
                "Limit": 2000,
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "RateLimitRuleMetric",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "ChatbotWebACL",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
      "DependsOn": [
        "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip",
        },
        "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:us-east-1:123456789012:security-group/",
                          {
                            "Fn::GetAtt": [
                              "TestVPCD26570D8",
                              "DefaultSecurityGroup",
                            ],
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FrontendLogGroupCE4F14E0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/ecs/chatbot-frontend",
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FrontendTargetGroupED7B3E5D": {
      "Properties": {
        "HealthCheckPath": "/",
        "Matcher": {
          "HttpCode": "200",
        },
        "Port": 3000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "TaskExecutionRole250D2532": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TaskExecutionRoleDefaultPolicyA84DD1B0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:123456789012:repository/chatbot-frontend",
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FrontendLogGroupCE4F14E0",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:123456789012:repository/chatbot-backend",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BackendLogGroupDA10F1B2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TaskExecutionRoleDefaultPolicyA84DD1B0",
        "Roles": [
          {
            "Ref": "TaskExecutionRole250D2532",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TaskRole30FC0FBB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "DynamoDBPolicy",
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestVPCD26570D8": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "TestVPCIGW5175BCF9": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "TestVPCPrivateSubnet1DefaultRoute1576D3E9": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "TestVPCPublicSubnet1NATGateway6A40FA74",
        },
        "RouteTableId": {
          "Ref": "TestVPCPrivateSubnet1RouteTable1BE239FB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPrivateSubnet1RouteTable1BE239FB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPrivateSubnet1RouteTableAssociation3FFF492E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "TestVPCPrivateSubnet1RouteTable1BE239FB",
        },
        "SubnetId": {
          "Ref": "TestVPCPrivateSubnet1Subnet005D5ABE",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPrivateSubnet1Subnet005D5ABE": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPrivateSubnet2DefaultRoute03A159FA": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "TestVPCPublicSubnet2NATGatewayBE12FD22",
        },
        "RouteTableId": {
          "Ref": "TestVPCPrivateSubnet2RouteTable9B691DB2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPrivateSubnet2RouteTable9B691DB2": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPrivateSubnet2RouteTableAssociation08DD625F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "TestVPCPrivateSubnet2RouteTable9B691DB2",
        },
        "SubnetId": {
          "Ref": "TestVPCPrivateSubnet2Subnet45EC7DE3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPrivateSubnet2Subnet45EC7DE3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPublicSubnet1DefaultRoute11545FC4": {
      "DependsOn": [
        "TestVPCVPCGWF063BA4F",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "TestVPCIGW5175BCF9",
        },
        "RouteTableId": {
          "Ref": "TestVPCPublicSubnet1RouteTable959CA972",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPublicSubnet1EIPB686BDA0": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "TestVPCPublicSubnet1NATGateway6A40FA74": {
      "DependsOn": [
        "TestVPCPublicSubnet1DefaultRoute11545FC4",
        "TestVPCPublicSubnet1RouteTableAssociationD7253C7B",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "TestVPCPublicSubnet1EIPB686BDA0",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "TestVPCPublicSubnet1SubnetAE333572",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "TestVPCPublicSubnet1RouteTable959CA972": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPublicSubnet1RouteTableAssociationD7253C7B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "TestVPCPublicSubnet1RouteTable959CA972",
        },
        "SubnetId": {
          "Ref": "TestVPCPublicSubnet1SubnetAE333572",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPublicSubnet1SubnetAE333572": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPublicSubnet2DefaultRouteDCA67168": {
      "DependsOn": [
        "TestVPCVPCGWF063BA4F",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "TestVPCIGW5175BCF9",
        },
        "RouteTableId": {
          "Ref": "TestVPCPublicSubnet2RouteTable9C86C355",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPublicSubnet2EIP59BF172B": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "TestVPCPublicSubnet2NATGatewayBE12FD22": {
      "DependsOn": [
        "TestVPCPublicSubnet2DefaultRouteDCA67168",
        "TestVPCPublicSubnet2RouteTableAssociationBD2B01F3",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "TestVPCPublicSubnet2EIP59BF172B",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "TestVPCPublicSubnet2SubnetF2FC6943",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "TestVPCPublicSubnet2RouteTable9C86C355": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPublicSubnet2RouteTableAssociationBD2B01F3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "TestVPCPublicSubnet2RouteTable9C86C355",
        },
        "SubnetId": {
          "Ref": "TestVPCPublicSubnet2SubnetF2FC6943",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPublicSubnet2SubnetF2FC6943": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "SnapshotTestStack/TestVPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCRestrictDefaultSecurityGroupCustomResourceB9ACAB5A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Account": "123456789012",
        "DefaultSecurityGroupId": {
          "Fn::GetAtt": [
            "TestVPCD26570D8",
            "DefaultSecurityGroup",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
            "Arn",
          ],
        },
      },
      "Type": "Custom::VpcRestrictDefaultSG",
      "UpdateReplacePolicy": "Delete",
    },
    "TestVPCVPCGWF063BA4F": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "TestVPCIGW5175BCF9",
        },
        "VpcId": {
          "Ref": "TestVPCD26570D8",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WebACLAssociation": {
      "Properties": {
        "ResourceArn": {
          "Ref": "ChatbotALB4F5C7305",
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "ChatbotWebACL",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
