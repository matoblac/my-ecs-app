# .github/workflows/test.yml
name: Infrastructure Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # Test on releases to ensure distribution quality
  release:
    types: [ published ]

jobs:
  # Validate the infrastructure code quality
  infrastructure-tests:
    name: Infrastructure Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'cdk/package-lock.json'
    
    - name: Install CDK dependencies
      working-directory: ./cdk
      run: npm ci
    
    - name: Run infrastructure tests
      working-directory: ./cdk
      run: npm run test:ci
    
    - name: Generate coverage badge
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false # Don't fail for coverage uploads
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.xml

  # Validate CDK synthesis works in multiple environments
  cdk-validation:
    name: CDK Synthesis Validation
    runs-on: ubuntu-latest
    needs: infrastructure-tests
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install CDK dependencies
      working-directory: ./cdk
      run: npm ci
    
    - name: CDK Synthesis Test
      working-directory: ./cdk
      run: |
        echo "üèóÔ∏è Testing CDK synthesis for distribution..."
        npx cdk synth --quiet
        echo "‚úÖ CDK synthesis successful"
    
    - name: Validate CloudFormation Templates
      working-directory: ./cdk
      run: |
        echo "üîç Validating generated CloudFormation..."
        # Save synthesized template
        npx cdk synth > cdk.out/template.json
        
        # Basic validation that template is valid JSON
        cat cdk.out/template.json | jq empty
        echo "‚úÖ CloudFormation template is valid JSON"
        
        # Check template size (CloudFormation has limits)
        TEMPLATE_SIZE=$(stat -c%s cdk.out/template.json)
        if [ $TEMPLATE_SIZE -gt 460800 ]; then  # 450KB limit
          echo "‚ùå Template too large: ${TEMPLATE_SIZE} bytes"
          exit 1
        fi
        echo "‚úÖ Template size OK: ${TEMPLATE_SIZE} bytes"
    
    - name: Upload CloudFormation Template
      uses: actions/upload-artifact@v4
      with:
        name: cloudformation-template-node${{ matrix.node-version }}
        path: cdk.out/template.json
